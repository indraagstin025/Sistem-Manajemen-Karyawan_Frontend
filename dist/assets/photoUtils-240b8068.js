import{b as a}from"./AuthServices-f47c4eb9.js";const n={registerUser:async e=>{try{return(await a.post("/auth/register",e)).data}catch(r){throw console.error("Error di userService.registerUser:",r),r}},getAllUsers:async(e=1,r=10,t="",s="")=>{try{const o={page:e,limit:r,search:t,role:s};return(await a.get("/admin/users",{params:o})).data}catch(o){throw console.error("Error di userService.getAllUsers:",o),o}},getUserByID:async e=>{try{return(await a.get(`/users/${e}`)).data}catch(r){throw console.error(`Error di userService.getUserByID (${e}):`,r),r}},updateUser:async(e,r)=>{try{return(await a.put(`/users/${e}`,r)).data}catch(t){throw console.error(`Error di userService.updateUser (${e}):`,t),t}},deleteUser:async e=>{try{return(await a.delete(`/admin/users/${e}`)).data}catch(r){throw console.error(`Error di userService.deleteUser (${e}):`,r),r}},uploadProfilePhoto:async(e,r)=>{try{const t=new FormData;return t.append("photo",r),(await a.post(`/users/${e}/upload-photo`,t)).data}catch(t){throw console.error(`Error di userService.uploadProfilePhoto (${e}):`,t),t}},getProfilePhoto:async e=>{try{const r=localStorage.getItem("token"),t=await a.get(`/users/${e}/photo`,{responseType:"blob",headers:{Authorization:`Bearer ${r}`},validateStatus:s=>s>=200&&s<300||s===404});return t.status===404?null:t.data}catch(r){return console.error(`Gagal memuat foto user ${e}:`,r),null}}};async function u(e,r,t=48){const s="/assets/default-avatar.png";if(!e)return s;try{const o=await n.getProfilePhoto(e);if(o instanceof Blob&&o.size>0)return URL.createObjectURL(o);console.warn(`[PhotoUtils] Foto untuk user "${r}" kosong atau tidak valid. Menggunakan default avatar.`)}catch(o){console.warn(`[PhotoUtils] Gagal mengambil foto profil untuk "${r}" (${e}): ${o.message}. Gunakan default avatar.`)}return s}export{u as g,n as u};
